
services:
  # Backend Service
  moseisleycantina:
    build:
      context: ./MosEisleyCantina
      dockerfile: Dockerfile
    container_name: mos_eisley_app
    ports:
      - "8080:8080"
      - "8081:8081"  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - app_network
    restart: always 

  # Frontend Service (React.js)
  mos-eis-react:
    build:
      context: ./mos-eis-react
      dockerfile: Dockerfile
    container_name: mos-eis-react_app
    ports:
      - "3000:80"
    depends_on:
      - moseisleycantina
    networks:
      - app_network
    

  # SQL Server (for Backend)
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mos_eisley_sql
    environment:
      - SA_PASSWORD=P@ssword123
      - ACCEPT_EULA=Y
    ports:
      - "1433:1433"
    volumes:
      - sqlvolume:/var/opt/mssql
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./MosEisleyCantina/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app_network


  # Elasticsearch (for Backend)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      - app_network

  # Kibana (for Backend)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app_network

# Network Configuration
networks:
  app_network:
    external: true

# Volumes Configuration
volumes:
  sqlvolume:
    driver: local
  elastic_data:
    driver: local
